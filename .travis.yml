# Travis CI script to invoke coveralls.io coverage reporting
# (C) 2015 Niall Douglas

language: cpp
os:
 - linux
 - osx
notifications:
  email:
#    recipients:
#      - one@example.com
#      - other@example.com
    on_success: change # [always|never|change] # default: change
    on_failure: change # [always|never|change] # default: always

env:
  # Coveralls.io API key
  secure: "LU8flpdvLjaFIVgy8oqhHzy92AUPRgw3bRv+/Q91fnWNrvbeRVMEOj+vML+zDS7iU3L2ZbppNf/1YkavGhHh9HfD8PC0dYPEmU0xjS/3WdoKxMd0MCYUZxQ+6zgx3GLgZS2NxciVlruZSs9Q+hKbguvvjwGGSVin6LlMmC2KqGA="
  matrix:
    - _="GCC 4.8 + Standalone unit/functional tests coverage" VALGRIND=0 CCFLAGS="-fprofile-arcs -ftest-coverage -DBOOST_AFIO_COMPILING_FOR_GCOV -DNDEBUG" GCCVER="g++-4.8" GCOV=1
    - _="MacOS X build" VALGRIND=0 CCFLAGS="-DNDEBUG" GCCVER="clang++" GCOV=0
    
#matrix:
#  exclude:
#    - os: linux
#      - _="MacOS X build" VALGRIND=0 CCFLAGS="-DNDEBUG" GCCVER="clang++" GCOV=0
#    - os: osx
#      - _="GCC 4.8 + Standalone unit/functional tests coverage" VALGRIND=0 CCFLAGS="-fprofile-arcs -ftest-coverage -DBOOST_AFIO_COMPILING_FOR_GCOV -DNDEBUG" GCCVER="g++-4.8" GCOV=1

before_install:
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository -y ppa:boost-latest/ppa; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -qq libboost1.55-all-dev; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ] && [ $GCCVER != "" ]; then sudo apt-get install -qq $GCCVER; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then sudo brew update; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then sudo brew install boost; fi
 - git submodule update --init --recursive

script:
 - CCFLAGS="$CCFLAGS -g -O2 -std=c++11 test/test_all.cpp detail/SpookyV2.cpp -Iinclude -Itest -DBOOST_AFIO_RUNNING_IN_CI=1 -lboost_filesystem -lboost_system -lpthread"
 - if [ $GCOV -eq 1 ]; then LINKFLAGS="$LINKFLAGS -lgcov"; fi
 - cd test
 - bash ./test_file_glob.sh
 - cd ..
 - $GCCVER -o test_all $CCFLAGS $LINKFLAGS
 - ./test_all

after_success:
 - if [ $GCOV -eq 1 ]; then bash -x test/update_coveralls.sh `pwd`; fi
