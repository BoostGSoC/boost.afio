language: cpp
compiler:
  - gcc
  - clang

env:
  - UNIT_TESTS=0 VALGRIND=0 DEBUG=0
  - UNIT_TESTS="exclude:async_io/torture* exclude:async_io/errors" VALGRIND=0 DEBUG=0
  - UNIT_TESTS="exclude:async_io/torture* exclude:async_io/errors" VALGRIND=memcheck DEBUG=1
#  - UNIT_TESTS="async_io/works/1" VALGRIND=0 DEBUG=1 FLAGS="--usegcc=g++-4.8 --usethreadsanitize"

matrix:
  exclude:
    - compiler: clang
      env: UNIT_TESTS="exclude:async_io/torture* exclude:async_io/errors" VALGRIND=memcheck DEBUG=1
  allow_failures:
    - compiler: gcc
      env: UNIT_TESTS="exclude:async_io/torture* exclude:async_io/errors" VALGRIND=memcheck DEBUG=1

before_install:
 - sudo add-apt-repository -y ppa:apokluda/boost1.53
 - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
 - if [ $CXX = "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi
 - sudo apt-get update -qq
 - sudo apt-get install -qq libboost1.53-all-dev
 - if [ $CXX = "clang++" ]; then sudo apt-get install -qq libstdc++-4.8-dev clang-3.2; fi
 - if [ $VALGRIND != "0" ]; then sudo apt-get install -qq valgrind; fi
 - git submodule update --init --recursive

script:
 - if [ $CC = "clang" ]; then if [ $DEBUG -eq 0 ]; then scons -k --useclang=clang++-3.2; else scons -k --useclang=clang++-3.2 --debugbuild; fi; else  if [ $DEBUG -eq 0 ]; then scons -k; else scons -k --debugbuild; fi; fi
 - if [ $VALGRIND = "memcheck" ]; then PREFIXTEST="valgrind --tool=memcheck --suppressions=unittests/memcheck.supp --track-origins=yes --track-fds=yes --leak-check=full --show-reachable=yes --error-exitcode=1"; fi
 - if [ $VALGRIND = "drd" ]; then PREFIXTEST="valgrind --tool=drd --suppressions=unittests/drd.supp --error-exitcode=1"; fi
 - if [ $VALGRIND = "0" ]; then PREFIXTEST=""; fi
 - if [ $DEBUG -eq 0 ]; then PREFIXPATH="x64/Release"; fi
 - if [ $DEBUG -eq 1 ]; then PREFIXPATH="x64/Debug"; fi

 - if [ "$UNIT_TESTS" != "0" ]; then $PREFIXTEST $PREFIXPATH/tests $UNIT_TESTS; fi
