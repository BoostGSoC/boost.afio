[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.0, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\structboost_1_1afio_1_1detail_1_1when__all__count__completed__state.xml]
[section:detail_when_all_count_completed_state detail::when_all_count_completed_state]

'''<indexterm><primary>detail</primary></indexterm><indexterm><primary>when_all_count_completed_state</primary></indexterm>'''


[heading Synopsis]
``struct detail::when_all_count_completed_state
{
  promise< std::vector< std::shared_ptr< async_io_handle > > > done;  // 
  std::vector< async_io_op > inputs;                                  // 
  std::vector< std::shared_ptr< async_io_handle > > out;              // 
  atomic< size_t > togo;                                              // 
};
``

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``when_all_count_completed_state(std::vector< async_io_op > _inputs)``

] [] [[* std::vector< async_io_op >]: ['_inputs]:  




]]
[[``when_all_count_completed_state(std::vector< async_io_op >::iterator first, std::vector< async_io_op >::iterator last)``

] [] [[* std::vector< async_io_op >::iterator]: ['first]:  

[* std::vector< async_io_op >::iterator]: ['last]:  




]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

