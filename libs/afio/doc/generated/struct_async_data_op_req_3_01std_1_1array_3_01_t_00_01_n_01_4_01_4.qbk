[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.0, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\structboost_1_1afio_1_1async__data__op__req_3_01std_1_1array_3_01_t_00_01_n_01_4_01_4.xml]
[section:async_data_op_req_std_array_t_n__ async_data_op_req< std::array< T, N > >]

'''<indexterm><primary>async_data_op_req&lt; std::array&lt; T, N &gt; &gt;</primary></indexterm>'''
A specialisation for any std::array<T, N> 

[heading Synopsis]
``template<class T, size_t N>
struct async_data_op_req< std::array< T, N > >
      : public async_data_op_req< void >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[class T] []]
[[size_t N] []]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[`` async_data_op_req()``

] [] [


]]
[[`` async_data_op_req(const async_data_op_req & o)``

] [] [[* const async_data_op_req &]: ['o]:  




]]
[[`` async_data_op_req(async_data_op_req && o)``

] [] [[* async_data_op_req &&]: ['o]:  




]]
[[``async_data_op_req & operator=(const async_data_op_req & o)``

] [] [[* const async_data_op_req &]: ['o]:  




]]
[[``async_data_op_req & operator=(async_data_op_req && o)``

] [] [[* async_data_op_req &&]: ['o]:  




]]
[[`` async_data_op_req(async_io_op _precondition, std::array< T, N > & v, off_t _where)``

] [] [[* async_io_op]: ['_precondition]:  

[* std::array< T, N > &]: ['v]:  

[* off_t]: ['_where]:  




]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

