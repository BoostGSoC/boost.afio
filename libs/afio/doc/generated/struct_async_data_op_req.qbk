[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.0, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\structboost_1_1afio_1_1async__data__op__req.xml]
[section:async_data_op_req async_data_op_req]

'''<indexterm><primary>async_data_op_req</primary></indexterm>'''
A specialisation for any pointer to type T. 

[heading Synopsis]
``template<class T>
struct async_data_op_req
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[class T] []]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``async_data_op_req()``

] [] [


]]
[[``async_data_op_req(const async_data_op_req & o)``

] [] [[* const async_data_op_req &]: ['o]:  




]]
[[``async_data_op_req(async_data_op_req && o)``

] [] [[* async_data_op_req &&]: ['o]:  




]]
[[``async_data_op_req(async_io_op _precondition, T * _buffer, size_t _length, off_t _where)``

] [] [[* async_io_op]: ['_precondition]:  

[* T *]: ['_buffer]:  

[* size_t]: ['_length]:  

[* off_t]: ['_where]:  




]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``async_data_op_req & operator=(const async_data_op_req & o)``

] [] [[* const async_data_op_req &]: ['o]:  




]]
[[``async_data_op_req & operator=(async_data_op_req && o)``

] [] [[* async_data_op_req &&]: ['o]:  




]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

