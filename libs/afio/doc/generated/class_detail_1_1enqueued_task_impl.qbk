[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\classboost_1_1afio_1_1detail_1_1enqueued__task__impl.xml]
[section:detail_enqueued_task_impl detail::enqueued_task_impl]

'''<indexterm><primary>detail</primary></indexterm><indexterm><primary>enqueued_task_impl</primary></indexterm>'''


[heading Synopsis]
``template<class R>
class detail::enqueued_task_impl
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[class R] []]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``enqueued_task_impl()``

] [Default constructor. ] [


]]
[[``enqueued_task_impl(std::function< R()> c)``

] [Constructs an enqueued task calling ['c]. ] [[* std::function< R()>]: ['c]:  




]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``bool valid()``

] [Returns true if valid. ] [


]]
[[``void swap(enqueued_task_impl & o)``

] [Swaps contents with another instance. ] [[* enqueued_task_impl &]: ['o]:  




]]
[[``void reset()``

] [Resets the contents. ] [


]]
[[``future< R > get_future()``

] [Returns the future corresponding to the future return value of the task. ] [


]]
[[``void set_future_exception(exception_ptr e)``

] [Sets the future corresponding to the future return value of the task. ] [[* exception_ptr]: ['e]:  




]]
[[``void disable_auto_set_future(bool v = true)``

] [Disables the task setting the future return value. ] [[* bool]: ['v]:  




]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

