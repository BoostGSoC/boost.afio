[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\classboost_1_1afio_1_1thread__pool.xml]
[section:thread_pool thread_pool]

'''<indexterm><primary>thread_pool</primary></indexterm>'''
A very simple thread pool based on Boost.ASIO and std::thread. 

[heading Synopsis]
``class thread_pool
{
  // ...
};
``

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``thread_pool(size_t no)``

] [] [[* size_t]: ['no]:  The number of worker threads to create 




]]
[[``~thread_pool()``

] [Destroys the thread pool, waiting for worker threads to exit beforehand. ] [


]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``boost::asio::io_service & io_service()``

] [Returns the underlying io_service. ] [


]]
[[``template<class F>
future< typename std::result_of< F()>::type > enqueue(F f)``

] [Sends some callable entity to the thread pool for execution. ] [[* F]: ['f]:  




]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

