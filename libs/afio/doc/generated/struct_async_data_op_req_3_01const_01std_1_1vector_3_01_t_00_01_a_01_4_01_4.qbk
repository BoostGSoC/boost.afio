[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.0, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1vector_3_01_t_00_01_a_01_4_01_4.xml]
[section:async_data_op_req_conststd_vector_t_a__ async_data_op_req< const std::vector< T, A > >]

'''<indexterm><primary>async_data_op_req&lt; const std::vector&lt; T, A &gt; &gt;</primary></indexterm>'''
A specialisation for any const std::vector<T, A> 

[heading Synopsis]
``template<class T, class A>
struct async_data_op_req< const std::vector< T, A > >
      : public async_data_op_req< const void >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[class T] []]
[[class A] []]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[`` async_data_op_req()``

] [] [


]]
[[`` async_data_op_req(const async_data_op_req & o)``

] [] [[* const async_data_op_req &]: ['o]:  




]]
[[`` async_data_op_req(async_data_op_req && o)``

] [] [[* async_data_op_req &&]: ['o]:  




]]
[[`` async_data_op_req(const async_data_op_req< std::vector< T, A >> & o)``

] [] [[* const async_data_op_req< std::vector< T, A >> &]: ['o]:  




]]
[[`` async_data_op_req(async_data_op_req< std::vector< T, A >> && o)``

] [] [[* async_data_op_req< std::vector< T, A >> &&]: ['o]:  




]]
[[``async_data_op_req & operator=(const async_data_op_req & o)``

] [] [[* const async_data_op_req &]: ['o]:  




]]
[[``async_data_op_req & operator=(async_data_op_req && o)``

] [] [[* async_data_op_req &&]: ['o]:  




]]
[[`` async_data_op_req(async_io_op _precondition, const std::vector< T, A > & v, off_t _where)``

] [] [[* async_io_op]: ['_precondition]:  

[* const std::vector< T, A > &]: ['v]:  

[* off_t]: ['_where]:  




]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

