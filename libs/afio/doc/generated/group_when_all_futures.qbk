[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.0, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\group__when__all__futures.xml]
[section:when_all when_all (from ___WG21_N3634__ for range of futures)]

'''<indexterm><primary>when_all</primary></indexterm>'''
Returns a future vector of results from all the supplied futures. 

[heading Description]
This is an implementation of WG21 N3634's when\u005fall() which uses process\u005fthreadpool() to allow you to create a future which only becomes available when all the supplied futures become available.

[heading Synopsis]
``template<class InputIterator>
future<std::vector<typename std::decay<decltype(((typename InputIterator::value_type *) 0)->get())>::type> when_all(InputIterator first, InputIterator last)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class InputIterator] [] [ - ] [Must be specified]]
[[InputIterator] [] [first] [An iterator pointing to the first item to wait upon ]]
[[InputIterator] [] [last] [An iterator pointing to after the last future to wait upon]]
]


[heading Returns]
A future vector of the results of the input futures 

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:when_any when_any (from ___WG21_N3634__ for range of futures)]

'''<indexterm><primary>when_any</primary></indexterm>'''
Returns a future tuple of results from all the supplied futures. 

[heading Description]
Returns a future result from the first of the supplied futures to become available

This is an implementation of WG21 N3634's when\u005fany() which uses process\u005fthreadpool() to allow you to create a future which only becomes available when the first of the supplied futures become available.

[heading Synopsis]
``template<class InputIterator>
future<std::pair<size_t, typename std::decay<decltype(((typename InputIterator::value_type *) 0)->get())>::type> when_any(InputIterator first, InputIterator last)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class InputIterator] [] [ - ] [Must be specified]]
[[InputIterator] [] [first] [An iterator pointing to the first future to wait upon ]]
[[InputIterator] [] [last] [An iterator pointing to after the last future to wait upon]]
]


[heading Returns]
A future pair of the first future to become available and its result 

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

