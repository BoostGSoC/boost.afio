[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\group__extents.xml]
[section:extents_1_batch extents (batch)]
'''<?dbhtml-include href="disqus_identifiers/extents_1_batch.html"?>'''

'''<indexterm><primary>extents</primary></indexterm>'''
Schedule a batch of asynchronous extent enumerations after preceding operations. 

[heading Description]
In a sparsely allocated file, it can be useful to know which extents contain non-zero data. Note that this call is racy (i.e. the extents are enumerated one by one on some platforms, this means they may be out of date with respect to one another) when other threads or processes are concurrently calling zero() or write() - this is a host OS API limitation.

[heading Synopsis]
``future< std::vector< std::pair< off_t, off_t > > > dispatcher::extents(const std::vector< future<>> & ops)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[const std::vector< future<>> &] [] [ops] [A batch of op handles.]]
]


[heading Returns]
A batch of stl\u005ffuture vectors of extents. 

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Race Guarantees][raceguarantees 
[raceguarantee FreeBSD, Linux, OS X..Very racy, even individual extent offset and length can race. The following filters are applied
before returning results: (i) Any extent whose end appears before its start is retried (ii) Sequences of contiguous extents are merged
into single extents.]
[raceguarantee Windows..Race free.]
 ]
[heading Complexity]Amortised O(N) to dispatch. Amortised O(N/threadpool*M) to complete where M is the average number of extents in each file.
[heading Exception Model]Propagates exceptions of any input preconditions with an errored state at the point of dispatch, and throws a `std::invalid_argument` if any inputs have values which could not possibly be correct. Once a batch of input ops has been verified at the point of entry as not errored, you are guaranteed that the batch is atomically scheduled as a whole, unless a failure to allocate memory occurs.
[heading Example][extents_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

[section:async_extents async_extents]
'''<?dbhtml-include href="disqus_identifiers/async_extents.html"?>'''

'''<indexterm><primary>async_extents</primary></indexterm>'''
Asynchronous extent enumeration after a preceding operation. 

[heading Description]
In a sparsely allocated file, it can be useful to know which extents contain non-zero data. Note that this call is racy (i.e. the extents are enumerated one by one on some platforms, this means they may be out of date with respect to one another) when other threads or processes are concurrently calling zero() or write() - this is a host OS API limitation.

[heading Synopsis]
``future<std::vector<std::pair<off_t, off_t> > > async_extents(future<> _precondition)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[future<>] [] [_precondition] [The precondition to use.]]
]


[heading Returns]
A [^`future<std::vector<std::pair<off_t, off_t>>>`]

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Race Guarantees][raceguarantees 
[raceguarantee FreeBSD, Linux, OS X..Very racy, even individual extent offset and length can race. The following filters are applied
before returning results: (i) Any extent whose end appears before its start is retried (ii) Sequences of contiguous extents are merged
into single extents.]
[raceguarantee Windows..Race free.]
 ]
[heading Complexity]Amortised O(1) to dispatch. Amortised O(M) to complete where M is the average number of extents in each file.
[heading Exception Model]Propagates the exception of any input precondition with an errored state at the point of dispatch, and throws a `std::invalid_argument` if any inputs have values which could not possibly be correct. Note that error code returning functions may still throw exceptions e.g. failure to allocate memory.
[heading Example][extents_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

[section:extents_1_throwing extents (throwing)]
'''<?dbhtml-include href="disqus_identifiers/extents_1_throwing.html"?>'''

'''<indexterm><primary>extents</primary></indexterm>'''
Synchronous extent enumeration after a preceding operation. 

[heading Description]
In a sparsely allocated file, it can be useful to know which extents contain non-zero data. Note that this call is racy (i.e. the extents are enumerated one by one on some platforms, this means they may be out of date with respect to one another) when other threads or processes are concurrently calling zero() or write() - this is a host OS API limitation.

[heading Synopsis]
``std::vector<std::pair<off_t, off_t> > extents(future<> _precondition)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[future<>] [] [_precondition] [The precondition to use.]]
]


[heading Returns]
A vector of extents 

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Race Guarantees][raceguarantees 
[raceguarantee FreeBSD, Linux, OS X..Very racy, even individual extent offset and length can race. The following filters are applied
before returning results: (i) Any extent whose end appears before its start is retried (ii) Sequences of contiguous extents are merged
into single extents.]
[raceguarantee Windows..Race free.]
 ]
[heading Complexity]Amortised O(1) to dispatch. Amortised O(M) to complete where M is the average number of extents in each file.
[heading Exception Model]Propagates the exception of any input precondition with an errored state at the point of dispatch, and throws a `std::invalid_argument` if any inputs have values which could not possibly be correct. Note that error code returning functions may still throw exceptions e.g. failure to allocate memory.
[heading Example][extents_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

[section:extents_2_non_throwing extents (non throwing)]
'''<?dbhtml-include href="disqus_identifiers/extents_2_non_throwing.html"?>'''

'''<indexterm><primary>extents</primary></indexterm>'''
Synchronous extent enumeration after a preceding operation. 

[heading Description]
In a sparsely allocated file, it can be useful to know which extents contain non-zero data. Note that this call is racy (i.e. the extents are enumerated one by one on some platforms, this means they may be out of date with respect to one another) when other threads or processes are concurrently calling zero() or write() - this is a host OS API limitation.

[heading Synopsis]
``std::vector<std::pair<off_t, off_t> > extents(error_code & _ec, future<> _precondition)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[error_code &] [] [_ec] [Error code to set. ]]
[[future<>] [] [_precondition] [The precondition to use.]]
]


[heading Returns]
A vector of extents 

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Race Guarantees][raceguarantees 
[raceguarantee FreeBSD, Linux, OS X..Very racy, even individual extent offset and length can race. The following filters are applied
before returning results: (i) Any extent whose end appears before its start is retried (ii) Sequences of contiguous extents are merged
into single extents.]
[raceguarantee Windows..Race free.]
 ]
[heading Complexity]Amortised O(1) to dispatch. Amortised O(M) to complete where M is the average number of extents in each file.
[heading Exception Model]Propagates the exception of any input precondition with an errored state at the point of dispatch, and throws a `std::invalid_argument` if any inputs have values which could not possibly be correct. Note that error code returning functions may still throw exceptions e.g. failure to allocate memory.
[heading Example][extents_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

