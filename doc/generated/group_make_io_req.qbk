[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\group__make__io__req.xml]
[section:make_io_req_3_length_deducing make_io_req (length deducing)]
'''<?dbhtml-include href="disqus_identifiers/make_io_req_3_length_deducing.html"?>'''

'''<indexterm><primary>make_io_req</primary></indexterm>'''
Convenience instantiator of a io\u005freq, letting the compiler deduce the template specialisation to use. 

[heading Synopsis]
``template<class T>
auto make_io_req(future<> _precondition, T && v, off_t _where)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [] [ - ] [Must be specified]]
[[future<>] [] [_precondition] [An optional precondition for this operation]]
[[T &&] [] [v] [A pointer to memory or reference to object into which to read or write]]
[[off_t] [] [_where] [The offset at which to transfer]]
]


[heading Returns]
An io\u005freq matching the supplied parameter type. Constructs an instance.

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Example]
[readwrite_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

[section:make_io_req_3_length_deducing make_io_req (length deducing)]
'''<?dbhtml-include href="disqus_identifiers/make_io_req_3_length_deducing.html"?>'''

'''<indexterm><primary>make_io_req</primary></indexterm>'''
Convenience instantiator of a io\u005freq, letting the compiler deduce the template specialisation to use. 

[heading Synopsis]
``template<class T>
io_req<const std::initializer_list<T> > make_io_req(future<> _precondition, const std::initializer_list< T > & v, off_t _where)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [] [ - ] [Must be specified]]
[[future<>] [] [_precondition] [An optional precondition for this operation]]
[[const std::initializer_list< T > &] [] [v] [A pointer to memory or reference to object into which to read or write]]
[[off_t] [] [_where] [The offset at which to transfer]]
]


[heading Returns]
An io\u005freq matching the supplied parameter type. Constructs an instance.

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Example]
[readwrite_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

[section:make_io_req_4_length_specifying make_io_req (length specifying)]
'''<?dbhtml-include href="disqus_identifiers/make_io_req_4_length_specifying.html"?>'''

'''<indexterm><primary>make_io_req</primary></indexterm>'''
Convenience instantiator of a io\u005freq, letting the compiler deduce the template specialisation to use. 

[heading Synopsis]
``template<class T>
auto make_io_req(future<> _precondition, T && v, size_t _length,
                 off_t _where)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [] [ - ] [Must be specified]]
[[future<>] [] [_precondition] [An optional precondition for this operation]]
[[T &&] [] [v] [A pointer to memory or reference to object into which to read or write]]
[[size_t] [] [_length] [The number of bytes to transfer]]
[[off_t] [] [_where] [The offset at which to transfer ]]
]


[heading Returns]
An io\u005freq matching the supplied parameter type. Constructs an instance.

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

[heading Example]
[readwrite_example]


'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

