[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\classboost_1_1afio_1_1enqueued__task.xml]
[section:enqueued_task enqueued_task]
'''<?dbhtml-include href="disqus_identifiers/enqueued_task.html"?>'''

'''<indexterm><primary>enqueued_task</primary></indexterm>'''
Effectively our own custom std::packaged_task<>, with copy semantics and letting us early set value to significantly improve performance. 

[heading Synopsis]
``template<class R>
class enqueued_task
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[class R] [The return type of the callable which must be without parameters. Unlike [^`std::packaged_task<>`], this custom variant is copyable though each copy always refers to the same internal state. Early stl_future value setting is possible, with any subsequent value setting including that by the function being executed being ignored. Note that this behaviour opens the potential to lose exception state - if you set the stl_future value early and then an exception is later thrown, the exception is swallowed. ]]
]

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

