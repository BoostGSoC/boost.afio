[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml\structboost_1_1afio_1_1io__req_3_01const_01_t_01_4.xml]
[section:io_req_constt_ io_req< const T >]
'''<?dbhtml-include href="disqus_identifiers/io_req_constt_.html"?>'''

'''<indexterm><primary>io_req&lt; const T &gt;</primary></indexterm>'''
A convenience bundle of precondition, data and where for reading into a T as specified by its to_asio_buffers() overload. Data [*MUST] stay around until the operation completes. 

[heading Synopsis]
``template<class T>
struct io_req< const T >
      : public detail::io_req_impl< true >
{
  future precondition;                        // A precondition containing an open file handle for this operation. 
  std::vector< asio::const_buffer > buffers;  // A sequence of const Boost.ASIO buffers to write from. 
  off_t where;                                // The offset at which to write. 
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[class T] [Any readable (if const) or writable (if non-const) type T as specified by its to_asio_buffers() overload. ]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``bool validate()``

] [Validates contents for correctness. ] [

][
True if contents are correct 

]
]
[[`` io_req()``

] [Default constructor. ] [

][

]
]
[[`` io_req(const io_req & o)``

] [Copy constructor. ] [[* const io_req &]: ['o]:  



][

]
]
[[`` io_req(io_req && o)``

] [Move constructor. ] [[* io_req &&]: ['o]:  



][

]
]
[[`` io_req(const io_req< T > & o)``

] [Copy constructor. ] [[* const io_req< T > &]: ['o]:  



][

]
]
[[`` io_req(io_req< T > && o)``

] [Move constructor. ] [[* io_req< T > &&]: ['o]:  



][

]
]
[[``io_req & operator=(const io_req & o)``

] [Copy assignment. ] [[* const io_req &]: ['o]:  



][

]
]
[[``io_req & operator=(io_req && o)``

] [Move assignment. ] [[* io_req &&]: ['o]:  



][

]
]
[[`` io_req(future<> _precondition, const T * v, size_t _length,
        off_t _where)``

] [Constructs an instance. ] [[* future<>]: ['_precondition]:  An optional precondition for this operation

[* const T *]: ['v]:  A pointer to memory or reference to object into which to read or write

[* size_t]: ['_length]:  The number of items to transfer 

[* off_t]: ['_where]:  The offset at which to transfer



][

]
]
[[``template<class U>
 io_req(future<> _precondition, const U & v, off_t _where)``

] [Constructs an instance. ] [[* future<>]: ['_precondition]:  An optional precondition for this operation

[* const U &]: ['v]:  A pointer to memory or reference to object into which to read or write

[* off_t]: ['_where]:  The offset at which to transfer 



][

]
]
[[``template<class U, size_t N>
 io_req(future<> _precondition, const U(&) v, off_t _where)``

] [Constructs an instance. ] [[* future<>]: ['_precondition]:  An optional precondition for this operation

[* const U(&)]: ['v]:  A pointer to memory or reference to object into which to read or write

[* off_t]: ['_where]:  The offset at which to transfer



][

]
]
]

[heading Header]
`#include <boost/afio/v2/afio.hpp>`

'''<?dbhtml-include href="disqus_comments.html"?>'''
[endsect]

